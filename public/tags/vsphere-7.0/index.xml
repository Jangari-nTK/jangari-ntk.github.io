<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VSphere 7.0 on My New Hugo Site</title>
    <link>http://localhost:1313/tags/vsphere-7.0/</link>
    <description>Recent content in VSphere 7.0 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/vsphere-7.0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【小ネタ】vCenter Server 7.0 Update 3 でイベントのエクスポート機能が追加</title>
      <link>http://localhost:1313/post/2021-11-13/</link>
      <pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-11-13/</guid>
      <description>
        
          
            &lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/post/2020-08-01/&#34;&gt;以前の記事&lt;/a&gt;で vCenter Server 7.0 でイベントをエクスポートする方法をいくつか記載していました。&lt;/p&gt;
&lt;p&gt;リリースノートなどに情報が載っていなかったのですが、vCenter Server 7.0 Update 3 で vSphere Client のイベントコンソールでのイベント一覧のエクスポート機能が追加されたようです。&lt;/p&gt;
&lt;p&gt;VMware Docs にもエクスポートに関するドキュメントが追加されていました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.vmware.com/jp/VMware-vSphere/7.0/com.vmware.vsphere.monitoring.doc/GUID-1A7FF15C-FC88-4BEF-B5AB-4BDA54D17F96.html&#34;&gt;vSphere Client 内のイベントのエクスポート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ドキュメントの更新日が VC 7.0 U3 のリリースより2ヶ月ほど古いのが気になりますが、少なくとも直前の VC 7.0 U2d で確認する限り本機能は未実装のようだったので、VC 7.0 U3 で追加された機能と考えて良さそうです。&lt;/p&gt;
&lt;h2 id=&#34;イベントのエクスポート手順&#34;&gt;イベントのエクスポート手順&lt;/h2&gt;
&lt;p&gt;vSphere Client のインベントリで、各オブジェクトの [監視] タブ &amp;gt; [イベント] から [エクスポート] をクリックすると、&amp;ldquo;ExportEventsLog.csv.csv&amp;rdquo; といったファイル名でダウンロードが始まります。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;http://localhost:1313/images/2021-11-13/event-export.PNG&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;注意点&#34;&gt;注意点&lt;/h2&gt;
&lt;p&gt;エクスポートされるイベントは一覧に表示されている1ページ分のみなので、表示件数に指定できる100件がエクスポート可能な最大件数となります。それ以上の件数や期間を指定してエクスポートしたい場合、現状ではやはり PowerCLI などを使う必要がありそうです。&lt;/p&gt;
&lt;p&gt;また、試した限りでは列のフィルタを行った後にエクスポートを行ってもエクスポート結果は変わらないようでした。アラームがトリガーされた際のイベントやステータスが警告のイベントのみ抽出してエクスポート、といったことはできないようです。&lt;/p&gt;
&lt;h2 id=&#34;おわりに&#34;&gt;おわりに&lt;/h2&gt;
&lt;p&gt;今回は vCenter Server 7.0 Update 3 で追加されていたイベントのエクスポート機能を試してみました。表示中の1ページ分ですがエクスポートが行えるようになったので、簡易的なイベントのエクスポートには使えそうかなと感じます。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>PowerCLI の vSphere Automation API SDK モジュールで vCenter Server のマシン SSL 証明書を更新する</title>
      <link>http://localhost:1313/post/2021-09-18/</link>
      <pubDate>Sat, 18 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-09-18/</guid>
      <description>
        
          
            &lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/post/2021-03-29/&#34;&gt;以前の記事&lt;/a&gt;で REST API を使って vCenter Server のマシン SSL 証明書を置き換えていましたが、先日の PowerCLI 12.4 のリリースで PowerCLI のコマンドレットが追加されました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blogs.vmware.com/PowerCLI/2021/09/powercli-12-4-whats-new.html&#34;&gt;PowerCLI 12.4 – What’s New&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The new vSphere Management Module
A new module is introduced for vSphere Management. It is a PowerShell-based module backed by the newly introduced vSphere Automation API SDK modules. &amp;hellip; Currently, the module contains 6 cmdlets to complement certificate management. Explore the cmdlet documentation to know more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add-VITrustedCertificate&lt;/li&gt;
&lt;li&gt;Get-VIMachineCertificate&lt;/li&gt;
&lt;li&gt;Get-VITrustedCertificate&lt;/li&gt;
&lt;li&gt;New-VIMachineCertificateSigningRequest&lt;/li&gt;
&lt;li&gt;Remove-VITrustedCertificate&lt;/li&gt;
&lt;li&gt;Set-VIMachineCertificate&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;PowerCLI のリファレンスを見ると &lt;a href=&#34;https://developer.vmware.com/docs/powercli/latest/vmware.powercli.vcenter/commands/set-vimachinecertificate/#VCenter&#34;&gt;Set-VIMachineCertificate&lt;/a&gt; コマンドレットによりカスタム証明書でマシン SSL 証明書を置き換えることが出来るようです。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>【Tips】共有ストレージなし＆VCSA デプロイ済みのクラスタで EVC を有効にする【自宅ラボ用】</title>
      <link>http://localhost:1313/post/2021-08-17/</link>
      <pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-08-17/</guid>
      <description>
        
          
            &lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;仮想マシンとしてデプロイされた vCenter Server が存在するクラスタ上で EVC を有効にする場合、KB2147821 のように EVC がそれぞれ無効／有効な2つのクラスタを用意し、そのクラスタ間で vCenter Server 仮想マシンをインベントリ上で再登録する必要があります。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kb.vmware.com/s/article/2147821?lang=ja&#34;&gt;vCenter Server 6.5 および 6.7 で vCenter Server 自身の仮想マシンが実行されるクラスタの EVC を有効にする方法 (2147821)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先日、Intel NUC 10 1台で構成していた自宅ラボに Intel NUC 11 の ESXi 7.0 を追加したため EVC を有効にしようとしたのですが、共有ストレージを用意していなかったためホスト間でのインベントリの再登録が行えませんでした。&lt;/p&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;遊びで使っている自宅ラボでの EVC の有効化のためだけに共有ストレージを追加するのも面倒でしたので、以下のような少々トリッキーな手段で EVC を有効にしてみました。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;vCenter Server 仮想マシンを停止＆スナップショットを作成&lt;/li&gt;
&lt;li&gt;ハードウェアバージョン14以降へのアップグレード&lt;/li&gt;
&lt;li&gt;仮想マシンに Per-VM EVC のパラメータを追加&lt;/li&gt;
&lt;li&gt;vCenter Server 仮想マシンをパワーオンしてクラスタの EVC を有効化&lt;/li&gt;
&lt;li&gt;1.のスナップショットにリストアして再度クラスタの EVC を有効化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;vCenter Server 仮想マシンが存在するクラスタ上で EVC を有効にする場合、vCenter Server 仮想マシン自身の CPU 互換性が問題になります。&lt;/p&gt;
&lt;p&gt;一度クラスタで EVC を構成してしまえば vCenter Server が停止していてもホストの EVC モードは維持されるので、手作業で vCenter Server 仮想マシンの CPUID をマスクした後、クラスタの EVC を構成し、作業前のスナップショットにリストアすることで vCenter Server 仮想マシンをクラスタの EVC モードで起動させます。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>【メモ】ESXi 7.0 の Kickstart の %post で boot.cfg を触る</title>
      <link>http://localhost:1313/post/2021-08-07/</link>
      <pubDate>Sat, 07 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-08-07/</guid>
      <description>
        
          
            &lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/post/2020-08-23/&#34;&gt;以前の Nested ESXi の記事&lt;/a&gt;や &lt;a href=&#34;https://kb.vmware.com/s/article/2149444?lang=ja&#34;&gt;KB2149444&lt;/a&gt; 等でも言及されていますが、ESXi のブートオプションは /bootbank/boot.cfg の kernelopt 行に記載されます。&lt;/p&gt;
&lt;p&gt;ESXi は &lt;a href=&#34;https://docs.vmware.com/jp/VMware-vSphere/6.5/com.vmware.vsphere.install.doc/GUID-870A07BC-F8B4-47AF-9476-D542BA53F1F5.html&#34;&gt;キックスタートファイルを使用した自動インストール&lt;/a&gt;が可能なので、%post や %firstboot のセクションで編集できないかと思い、各セクションで以下のような sed コマンドを実行して試してみました。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sed -i &amp;#34;s/kernelopt=.*/kernelopt=autoPartition=FALSE allowLegacyCPU=true/&amp;#34; /bootbank/boot.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;今回の環境は ESXi 7.0 Update 2 です。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;結果&lt;/h2&gt;
&lt;p&gt;%firstboot セクションでは sed により boot.cfg の内容が置換されました。しかし、%post セクションでは sed の実行がエラーになり置換されませんでした。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
  &lt;picture&gt;

    
      
        
        
        
        
        
        
    &lt;img
      loading=&#34;lazy&#34;
      decoding=&#34;async&#34;
      alt=&#34;&#34;
      
        class=&#34;image_figure image_internal image_unprocessed&#34;
        src=&#34;http://localhost:1313/images/2021-08-07/esxi-ks-post-failed.PNG&#34;
      
      
    /&gt;

    &lt;/picture&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;sed コマンドがエラーになっていることから /bootbank の状態が気になるので、ks.cfg 内で以下のコマンドを実行して %post の時の状態を覗いてみました。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;%post --interpreter=busybox
ls -laR / &amp;gt; /vmfs/volumes/datastore1/_ks_post_ls_-laR.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;結果としては、%post 時点では /bootbank のリンク先が /tmp になっていました。また、/tmp には boot.cfg が存在していなかったので、/bootbank/boot.cfg が無いために sed がエラーになっていることが分かりました。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/:
total 885
drwxr-xr-x    1 root     root           512 Aug  6 14:54 .
drwxr-xr-x    1 root     root           512 Aug  6 14:54 ..
-r--r--r--    1 root     root            20 Feb 17 23:19 .mtoolsrc
drwxr-xr-x    1 root     root           512 Aug  6 14:51 bin
lrwxrwxrwx    1 root     root             4 Aug  6 14:54 bootbank -&amp;gt; /tmp

/tmp:
total 204
drwxrwxrwt    1 root     root           512 Aug  6 14:57 .
drwxr-xr-x    1 root     root           512 Aug  6 14:54 ..
drwx------    1 root     root           512 Aug  6 14:52 _bootbank4uex0li5
-rwx------    1 root     root            51 Aug  6 14:57 ks-script
drwxr-xr-x    1 root     root           512 Aug  6 14:57 onetime
-rw-r--r--    1 root     root        175616 Aug  6 14:57 onetime.tar
drwxr-xr-x    1 root     root           512 Aug  6 14:54 scratch
drwx------    1 root     root           512 Aug  6 14:51 vmware-root
drwx------    1 root     root           512 Aug  6 14:52 vmware-root_67638-4085508114
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;対処&#34;&gt;対処&lt;/h2&gt;
&lt;p&gt;%post 時点でも /vmfs/volumes/BOOTBANK1 と /vmfs/volumes/BOOTBANK2 は各 Bootbank にシンボリックリンクが張られていたので、それらのパスを指定すれば問題なさそうでした。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>PTP を使用して ESXi を時刻同期する</title>
      <link>http://localhost:1313/post/2021-06-20/</link>
      <pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-06-20/</guid>
      <description>
        
          
            &lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;前回の記事では vSphere 7 で実装された PTP 関連の機能のうち、仮想マシンのプレシジョンクロックデバイスを取り上げました。今回の記事ではもう一つの機能である ESXi の PTP による時刻同期を試してみたいと思います。&lt;/p&gt;
&lt;p&gt;なお、PTP のプロトコルの概要は省きますが、&lt;a href=&#34;http://localhost:1313/post/2021-06-10/#ptp-precision-time-protocol&#34;&gt;前回の記事&lt;/a&gt;で挙げた参考 URL のほか、Cisco の有志の方が書かれている以下の記事も参考になると思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/nkawabat/items/87223d4d8fbf633db958&#34;&gt;【初心者向け】時刻同期101 - PTP の基本動作&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;グランドマスタークロックのセットアップ&#34;&gt;グランドマスタークロックのセットアップ&lt;/h2&gt;
&lt;h3 id=&#34;前置き今回の記事の構成&#34;&gt;前置き：今回の記事の構成&lt;/h3&gt;
&lt;p&gt;本来はグランドマスタークロックとして PTP 対応の原子時計などを用意し、境界クロック(BC)やトランスペアレントクロック(TC)として機能するスイッチなどを経由して、末端のスレーブクロックに接続することでマイクロ秒～ナノ秒レベルの同期精度が維持されます。&lt;/p&gt;
&lt;p&gt;今回の記事では単純な機能のテスト目的のため、グランドマスタークロックを仮想マシンの CentOS 8 Stream ＋ ptp4l で用意し、ESXi と同じネットワークセグメントに接続するだけの構成としています。&lt;/p&gt;
&lt;p&gt;クロック精度のハードウェア支援や BC/TC も無いため同期精度は完全に無視していますので、あくまでもテスト目的であり、決して本番環境向けの構成ではないことを予めご認識おきください。&lt;/p&gt;
&lt;h3 id=&#34;セットアップ手順&#34;&gt;セットアップ手順&lt;/h3&gt;
&lt;p&gt;まずは CentOS 8 Stream をインストールした後、linuxptp パッケージをインストールします。linuxptp パッケージに PTPv2 を実装したプログラム(ptp4l 等)が含まれています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# yum install linuxptp&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、ソフトウェアタイムスタンプを利用するよう ptp4l を構成します。ptp4l.conf の time_stamping オプションを hardware から software に編集することで可能です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# vi /etc/ptp4l.conf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;略&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time_stamping           software
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;また、適切な NIC を使用するように ptp4l の -i オプションを指定します。/etc/sysconfig/ptp4l を編集することで可能です。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>プレシジョンクロックデバイスで ESXi とゲストOSを時刻同期</title>
      <link>http://localhost:1313/post/2021-06-10/</link>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-06-10/</guid>
      <description>
        
          
            &lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;vSphere 7.0 ではゲストの時刻同期に関する新機能としてプレシジョンクロックデバイスという新しい仮想デバイスが追加されています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.vmware.com/apps/2020/04/highlights-of-new-features-and-improvements-in-vsphere-7-vsan-7-nsx-t-3-for-high-performance-computing-and-machine-learning.html&#34;&gt;Highlights of New Features and Improvements in vSphere 7/vSAN 7/NSX-T 3 for High Performance Computing and Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.vmware.com/jp/VMware-vSphere/7.0/com.vmware.vsphere.vm_admin.doc/GUID-4E6AE904-75C6-475F-8732-07E4542D7798.html&#34;&gt;仮想マシンへのプレシジョン クロック デバイスの追加&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仮想マシンにプレシジョンクロックデバイスを構成すると、ゲストOSからは PTP ハードウェアクロック(PHC)というデバイスとして見えます。ゲストOSはこのデバイスを参照することで、ESXi のシステム時刻を取得して同期できるようになります。&lt;/p&gt;
&lt;p&gt;今回の記事では Windows Server 2019 と Red Hat Enterprise Linux 8.3 でプレシジョンクロックデバイスを使用したホスト－ゲスト間の時刻同期を試してみたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;ptp-precision-time-protocol&#34;&gt;PTP (Precision Time Protocol)&lt;/h2&gt;
&lt;p&gt;時刻同期に広く使われているネットワークプロトコルとして NTP がありますが、NTP の精度は一般にミリ秒レベルです。これに対して PTP ではハードウェア(NIC)によるタイムスタンプと正確な転送遅延時間の測定により、ナノ秒以下の精度を目標として時刻同期を行うためのプロトコルとなっています。&lt;/p&gt;
&lt;p&gt;PTP はマスター／スレーブ型のプロトコルで、(誤解を恐れずに言うと)グランドマスタークロックがタイムスタンプ情報をマルチキャストで配信、スレーブ(NIC)は受信したタイムスタンプ情報から自身のハードウェアタイムスタンプを限りなくマスターに近づけ、OS のシステム時刻は NIC から取得したハードウェアタイムスタンプを使用して同期します。&lt;/p&gt;
&lt;p&gt;PTP の概要は日本語だと以下のセイコーソリューションズ社の Web サイトや Interop 2016 の資料、Red Hat 社の linuxptp のドキュメントなどが参考になるかなと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.seiko-sol.co.jp/leap-second/no-05/&#34;&gt;セイコーの｢うるう秒｣対策（第５回）　「うるう秒」を全く使わない時間系 | セイコーソリューションズ&lt;/a&gt;&lt;br&gt;
→ &lt;a href=&#34;https://www.seiko-sol.co.jp/wp-content/uploads/2016/12/leap_second_seminar-PART2-201610.pdf&#34;&gt;高精度時刻同期プロトコルIEEE1588 PTPのご紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/InteropTokyo-ShowNet/ptp-precision-time-protocol&#34;&gt;2016-ShowNet-PTP (Precision Time Protocol)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-configuring_ptp_using_ptp4l&#34;&gt;第20章 ptp4l を使用した PTP の設定 Red Hat Enterprise Linux 7 | Red Hat Customer Portal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vsphere-7-での-ptp-サポート&#34;&gt;vSphere 7 での PTP サポート&lt;/h2&gt;
&lt;p&gt;vSphere 7 では PTP に関連する新機能として以下の２つの機能が追加されています。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>REST API で vCenter Server のマシンSSL証明書を置き換える</title>
      <link>http://localhost:1313/post/2021-03-29/</link>
      <pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-03-29/</guid>
      <description>
        
          
            &lt;h2 id=&#34;20210916-追記-powercli-124-で証明書管理が追加&#34;&gt;2021/09/16 追記: PowerCLI 12.4 で証明書管理が追加&lt;/h2&gt;
&lt;p&gt;2021/09/16 にリリースされた PowerCLI 12.4 で vSphere Automation API のモジュールが追加されました。このモジュールには vCenter Server の証明書管理のコマンドレットが含まれています。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blogs.vmware.com/PowerCLI/2021/09/powercli-12-4-whats-new.html&#34;&gt;PowerCLI 12.4 - What&amp;rsquo;s New - VMware PowerCLI Blog&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The new vSphere Management Module
A new module is introduced for vSphere Management. It is a PowerShell-based module backed by the newly introduced vSphere Automation API SDK modules. &amp;hellip; Currently, the module contains 6 cmdlets to complement certificate management. Explore the cmdlet documentation to know more.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>vCenter Server 7.0 で CSR を生成してカスタム証明書に置き換える</title>
      <link>http://localhost:1313/post/2021-03-24/</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-03-24/</guid>
      <description>
        
          
            &lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;vSphere 6.7 以降では vSphere Client から証明書の管理が可能になっています。カスタム証明書の CSR を vCenter Server で生成する手順について文言など多少混乱した点があったので、記録として残しておきたいと思います。&lt;/p&gt;
&lt;p&gt;流れは一般的な証明書の発行と同じく以下の３つです。今回のケースでは手順1, 3 は vCenter Server 側、手順 2 は CA 側で実施する操作になります。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;証明書署名要求 (CSR) の生成&lt;/li&gt;
&lt;li&gt;署名済み証明書の発行&lt;/li&gt;
&lt;li&gt;署名済み証明書のインポート&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;注意カスタム証明書の置き換えに関する既知問題&#34;&gt;注意：カスタム証明書の置き換えに関する既知問題&lt;/h2&gt;
&lt;p&gt;vCenter Server 7.0 ではマシン SSL 証明書をカスタム証明書に置き換えると vCenter Server のサービスが起動に失敗する既知問題があります。vCenter Server 7.0 Update 1c で修正されていますが、それ以前のリリースで発生した場合のワークアラウンドは無いようです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kb.vmware.com/s/article/82168&#34;&gt;vCenter Server 7.0 fails to start after replacing VMCA certificates with CA-signed certificates. (82168)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;私の環境では再現できませんでしたが修正リリース以降へのアップデートの実施が推奨されますので、カスタム証明書を使用する場合は事前に既知問題に該当する vCenter Server 7.0 リリースか確認するようにしましょう。&lt;/p&gt;
&lt;p&gt;2021/03/28 追記：インポートする証明書の改行コードなどに起因する既知問題を観測したので、本記事の末尾に内容などを追記しました。&lt;/p&gt;
&lt;h2 id=&#34;証明書署名要求-csr-の生成&#34;&gt;証明書署名要求 (CSR) の生成&lt;/h2&gt;
&lt;p&gt;vSphere Client の [ホーム] &amp;gt; [管理] &amp;gt; [証明書の管理] を開き、[アクション] から [証明書署名要求 (CSR) の生成] をクリックします。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>journalctl コマンドで vCenter Server のイベントを見てみる</title>
      <link>http://localhost:1313/post/2021-02-12/</link>
      <pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2021-02-12/</guid>
      <description>
        
          
            &lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;以前、&lt;a href=&#34;http://localhost:1313/post/2020-08-01&#34;&gt;こちらの記事&lt;/a&gt;で vCenter Server 7.0 でのイベントのエクスポート方法 (PowerCLI / syslog) について書いていました。記事でも書いたとおり、vCenter Server Appliance 6.5 以降ではイベントストリーミングが追加され既定で有効になっていますが、syslog 転送は手動で構成する必要がありました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.vmware.com/jp/VMware-vSphere/7.0/com.vmware.vsphere.monitoring.doc/GUID-FD51CE83-8B2A-4EBA-A16C-75DB2E384E95.html&#34;&gt;リモートの Syslog サーバへのイベント ストリーミングの構成&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vCenter Serverストリーミング機能へのイベントの書き込みを構成することもできます。イベントのストリーミングは、vCenter Server でのみサポートされます。リモート Syslog サーバに対するイベントのストリーミングは、デフォルトで無効になっています。リモート Syslog サーバへの vCenter Server イベントのストリーミングは、vCenter Server 管理インターフェイスで有効にして設定することができます。&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;vpxd.event.syslogオプションを有効または無効にします。&lt;br&gt;
この設定のデフォルト値は「有効」です。&lt;/li&gt;
&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;syslog で転送できるのであればデータベース以外のどこかに記録されてないかなと思い色々と試してみたところ、journalctl コマンドで vMon のジャーナルを参照すると syslog 転送時と同じイベントの記録が確認できたので、参考までに見つけた流れなどを備忘録として残しておきたいと思います。&lt;/p&gt;
&lt;p&gt;なお、公式マニュアルやナレッジベースなどの公開情報は見当たらなかったのでサポート外の操作になるとは思われます。vCenter Server Appliance が壊れるような操作では無いはずですが実施する場合は自己責任でお願いします。&lt;/p&gt;
&lt;h2 id=&#34;vmware-service-lifecycle-manager-vmon&#34;&gt;VMware Service Lifecycle Manager (vMon)&lt;/h2&gt;
&lt;p&gt;vSphere 6.5 以降では vCenter Server のアーキテクチャが変わっており、多くの vCenter Server 関連サービスは VMware Service Lifecycle Manager サービス (vMon) の子プロセスとして動作するようになっています(PSC 関連など一部のサービスは対象外)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kb.vmware.com/s/article/2109881?lang=ja&#34;&gt;vCenter Server 6.x のサービスを停止、開始、再起動する方法 (2109881)&lt;/a&gt;&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>vCenter Server 7.0 のイベントをテキストで取得</title>
      <link>http://localhost:1313/post/2020-08-01/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2020-08-01/</guid>
      <description>
        
          
            &lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;
&lt;p&gt;vSphere Web Client (Flash 版) が vSphere 7 で遂に廃止となりました。vSphere Client (HTML5 版) は動作もスムーズで良いのですが、どうやら現時点では従来のイベントのエクスポートが行えないようです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kb.vmware.com/s/article/2008204&#34;&gt;Exporting virtual machine events from the Tasks &amp;amp; Events tab (2008204)&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: The export tasks/Events option is only available on the vSphere Web Client (Flex). The HTML client does not include this feature at this time.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;このため、別の方法でイベントを取得する方法を試してみました。試した方法は以下の２パターンです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;イベントストリーミングで転送してみる&lt;/li&gt;
&lt;li&gt;PowerCLI でエクスポートしてみる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なお、どちらの方法もメッセージの言語のローカライズは行われないためご注意ください。&lt;/p&gt;
&lt;h2 id=&#34;vcsa-のイベントストリーミングで転送してみる&#34;&gt;VCSA のイベントストリーミングで転送してみる&lt;/h2&gt;
&lt;p&gt;イベントストリーミングでの転送では以下の２点の設定が必要ですが、後者は既定で設定済みなので、実質的には前者のリモート Syslog 転送の設定だけ行うことでイベントが転送されるようになります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.vmware.com/jp/VMware-vSphere/7.0/com.vmware.vsphere.monitoring.doc/GUID-9633A961-A5C3-4658-B099-B81E0512DC21.html&#34;&gt;vCenter Server のログ ファイルを リモート Syslog サーバへ転送&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.vmware.com/jp/VMware-vSphere/7.0/com.vmware.vsphere.monitoring.doc/GUID-FD51CE83-8B2A-4EBA-A16C-75DB2E384E95.html&#34;&gt;リモートの Syslog サーバへのイベント ストリーミングの構成&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syslog 転送の構成はアプライアンス管理インターフェイス (VAMI) から行います。まず root ユーザーで VAMI にログインして以下のように [syslog] を開きましょう。&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
